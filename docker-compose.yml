version: "3.7"
services:
  backend:
    build:
      dockerfile: Dockerfile
      context: "./backend"
      # Only will build development stage from our dockerfile
    volumes:
      - ./backend:/app
    environment:
      OTEL_SERVICE_NAME: pet-hero
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://tempo:14268/api/traces
      LOG_FILE_NAME: /app/logs/pet-hero.log
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    env_file:
      - ./backend/.env
    depends_on:
      - postgres
    # Run a command against the development stage of the image
    command: npm run start:dev
    ports:
      - 5555:5555
      - 8081:8081
    networks:
      - back-tier

  postgres:
    image: "postgres:14-alpine"
    restart: always
    env_file:
      - ./backend/.env
    expose:
      - "5432:5432"
    volumes:
      - pet-hero-postgres:/var/lib/postgresql/data
    networks:
      - back-tier

  frontend:
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "3000:3000"
    networks:
      - front-tier

    # Monitoring and stuff...
  tempo:
    image: grafana/tempo:1.5.0
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./etc/tempo-local.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    ports:
      - "14268" # jaeger ingest, Jaeger - Thrift HTTP
      - "14250" # Jaeger - GRPC
      - "3200:3200" #tempo
      - "55680" # OpenTelemetry
      - "6831/udp" # Jaeger - Thrift Compact
      - "6832/udp" # Jaeger - Thrift Binary
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier

  loki:
    image: grafana/loki:2.6.1
    command: -config.file=/etc/loki/loki-local.yaml
    ports:
      - "3100:3100" # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./etc/loki-local.yaml:/etc/loki/loki-local.yaml
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier
  volume_exporter:
    image: mnadeem/volume_exporter
    command:
      [
        "--volume-dir=tempo:/tmp/tempo",
        "--volume-dir=logs:/app/logs",
        "--volume-dir=loki:/tmp/loki",
      ]
    volumes:
      - ./data/logs:/app/logs
      - ./data/tempo-data:/tmp/tempo
      - ./data/loki-data:/tmp/loki
    ports:
      - 9889:9888
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
    expose:
      - "9090"
    depends_on:
      - backend
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier

  grafana:
    image: grafana/grafana:9.1.1-ubuntu
    volumes:
      - ./data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "2345:3000"
    depends_on:
      - prometheus
      - tempo
      - loki
      - volume_exporter
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier

  node_exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    expose:
      - "9100"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_PORT=80
      - BACKEND_PORT=5555
    ports:
      - 80:80
    depends_on:
      - backend
      - postgres
      - frontend
      - grafana
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
    networks:
      - back-tier
      - front-tier

volumes:
  pet-hero-postgres:

networks:
  front-tier:
  back-tier:
